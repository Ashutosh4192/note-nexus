name: "Build & Release"

on:
  pull_request:
    branches:
      - main
      - master
  push:
    branches:
      - main
      - master
      - develop

jobs:
  build:
    name: Build & Release
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          architecture: x64

      - name: Create firebase_options.dart file
        run: echo "${{ secrets.FIREBASE_OPTIONS }}" > lib/firebase_options.dart
        shell: bash

      - name: Install Flutter dependencies
        run: flutter pub get

      - name: Verify Gradle Wrapper exists
        run: |
          cd android
          if [ ! -f "./gradlew" ]; then
            gradle wrapper
          fi
        shell: bash

      - name: Build Android APK
        run: ./android/gradlew assembleRelease --warning-mode all --verbose
        shell: bash

      - name: Prepare iOS build (on macOS runner)
        if: runner.os == 'macOS'
        run: |
          flutter build ios --no-codesign
          cd build/ios/iphoneos
          mkdir Payload
          cd Payload
          ln -s ../Runner.app
          cd ..
          zip -r app.ipa Payload
        shell: bash

      - name: Push to Releases
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/apk/release/*"
          tag: v1.0.${{ github.run_number }}
          token: ${{ secrets.TOKEN }}

      - name: Push iOS to Releases (on macOS runner)
        if: runner.os == 'macOS'
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/ios/iphoneos/app.ipa"
          tag: v1.0.${{ github.run_number }}
          token: ${{ secrets.TOKEN }}
